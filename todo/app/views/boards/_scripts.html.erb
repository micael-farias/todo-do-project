<script>
  $.ajaxSetup({
    headers: {
      'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
    }
  });

  $(document).ready(function() {

    // Mostrar o formulário de novo board ao clicar no botão
    $('#add-board-button').on('click', function(e) {
      e.preventDefault();
      var $this = $(this);
      var $form = $('.new-board-form');
      
      $this.hide();
      $form.show().insertAfter($this);
      $form.find('.board-title-input').focus();
    });

    // Fechar o formulário ao clicar fora
    $(document).on('click', function(e) {
      var $target = $(e.target);
      if (!$target.closest('.new-board-form').length && !$target.closest('#add-board-button').length) {
        $('.new-board-form').hide();
        $('#add-board-button').show();
      }
    });

    // Submeter o formulário ao pressionar Enter
    $(document).on('keypress', '.board-title-input', function(e) {
      if (e.which == 13) { // Código da tecla Enter
        e.preventDefault();
        var $form = $(this).closest('form');
        var boardTitle = $(this).val();

        // Enviar requisição AJAX para criar o board
        $.ajax({
          url: $form.attr('action'),
          method: 'POST',
          data: $form.serialize(),
          dataType: 'json',
          success: function(response) {
            if (response.success) {
              // Criar o novo card do board
              var newBoardCard = $(`
                <div class="board-card">
                  <a href="/boards/${response.board.id}" class="board-link">
                    <div class="card-body">
                      <h5 class="card-title">${response.board.title}</h5>
                    </div>
                  </a>
                </div>
              `).hide();
              
              // Inserir o novo board após o botão de adicionar
              $('#add-board-button').after(newBoardCard);
              newBoardCard.fadeIn(300);

              // Limpar e esconder o formulário
              $form.find('.board-title-input').val('');
              $form.closest('.new-board-form').hide();
              $('#add-board-button').show();
            } else {
              alert('Erro ao criar o board: ' + response.message);
            }
          },
          error: function() {
            alert('Erro ao criar o board. Por favor, tente novamente.');
          }
        });
      }
    });

  });

  document.addEventListener('DOMContentLoaded', function() {

    // Função para Redirecionar ao Clicar nos Quadrados do Gráfico
    const graphSquares = document.querySelectorAll('.graph-square');

    graphSquares.forEach(square => {
      square.addEventListener('click', function() {
        const boardId = this.getAttribute('data-board-id');
        const cardId = this.getAttribute('data-card-id');

        if (boardId) {
          // Redirecionar para o board correspondente
          window.location.href = `/boards/${boardId}`;
        }
      });
    });

    // Seleção de Humores
    const moodItems = document.querySelectorAll('.mood-item');
    const selectedMoodIdField = document.getElementById('selected_mood_id');
    let selectedMoodId = null;

    // Inicializar a seleção com o humor ativo, se existir
    moodItems.forEach(item => {
      const moodId = item.getAttribute('data-mood-id');
      if (item.classList.contains('selected')) {
        selectedMoodId = moodId;
      }
    });
    selectedMoodIdField.value = selectedMoodId || '';

    // Manipulação das caixas de humor para seleção única
    moodItems.forEach(item => {
      item.addEventListener('click', function() {
        const moodId = this.getAttribute('data-mood-id');

        if (this.classList.contains('selected')) {
          // Se o humor já está selecionado, desmarcar
          this.classList.remove('selected');
          selectedMoodId = null;
        } else {
          // Desmarcar todos os outros humores
          moodItems.forEach(i => i.classList.remove('selected'));
          // Marcar o humor clicado
          this.classList.add('selected');
          selectedMoodId = moodId;
        }

        selectedMoodIdField.value = selectedMoodId || '';
      });
    });

    // Manipulação do botão "Gerar Board"
    const generateBoardButton = document.getElementById('generate-board-button');

    generateBoardButton.addEventListener('click', function(event) {
      event.preventDefault(); // Evita a submissão do formulário imediatamente

      const messageSection = document.getElementById('mood-message-section');
      const messageAboveSection = document.getElementById('mood-message-above-section');
      const moodSelection = document.getElementById('mood-selection');
      const selectedMoodsText = document.getElementById('selected-mood-text');

      // Obter o nome do humor selecionado
      const selectedMoodItem = document.querySelector('.mood-item.selected');
      console.log(selectedMoodItem)
      const selectedMoodName = selectedMoodItem ? selectedMoodItem.querySelector('.mood-name').innerText : '';

      if (!selectedMoodId) {
        alert('Por favor, selecione pelo menos um humor antes de gerar o board.');
        return;
      }

      selectedMoodsText.innerText = "Sua Análise de Humor: " + selectedMoodName;
      // Atualizar a mensagem

      // Scroll para a seção de mensagem com comportamento suave
      messageAboveSection.scrollIntoView({ behavior: 'smooth' });

      // Atualizar os humores ativos via AJAX
      fetch('/update_user_moods', { // Atualize a rota conforme necessário
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({ mood_id: selectedMoodId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          console.log(data);

          // Verifica se os dados de theme_mood foram retornados
          if (data.theme_mood) {
            // Atualiza a imagem de humor
            $('#mood-image').attr('src', data.theme_mood.image_url);

            // Atualiza a mensagem de humor
            $('#mood-message').text(data.theme_mood.message);
          }

          // Atualiza o texto da análise de humor
          selectedMoodsText.innerText = "Sua Análise de Humor: " + selectedMoodName;

          // Mostra a seção de mensagem de humor
          $('#mood-message-section').show();

        } else {
          alert('Erro ao atualizar humor: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Erro:', error);
      });

    });

    // Manipulação do botão "Editar Humor"
    const editMoodButton = document.getElementById('edit-mood-button');

    editMoodButton.addEventListener('click', function() {
      const moodSelection = document.getElementById('mood-selection');
      const messageSection = document.getElementById('mood-message-section');
      
      // Mostrar a seleção de humores imediatamente
      moodSelection.style.display = 'flex';
      messageSection.style.display = 'block';
      
      // Adicionar um pequeno delay para garantir que a visibilidade foi aplicada antes de rolar para o topo
      setTimeout(() => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }, 100); // Ajuste o tempo conforme necessário (100ms é geralmente suficiente)
    });
   
    // Manipulação da submissão do formulário (se ainda necessário)
    const form = document.getElementById('daily-board-form');
    if (form) {
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        
        if (!selectedMoodId) {
          alert('Por favor, selecione pelo menos um humor.');
          return;
        }

        // Enviar via AJAX
        fetch(form.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ mood_id: selectedMoodId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log('Humor enviado com sucesso:', data);
                // Opcional: redirecionar ou atualizar a interface
            } else {
                alert('Erro ao enviar humor: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Erro:', error);
        });
      });
    }
  });
</script>
