<!-- app/views/boards/index.html.erb -->
<!-- Seção de Seleção de Humor -->
<div style="margin-left: 20px;">
   <% if current_user.show_daily_board && current_user.cards.exists? %>
   <div class="mood-selection mb-4" id="mood-selection" style="<%= 'display: none;' if @has_mood_today %>">
      <h2>Como vai, Michael?</h2>
      <% mood_category = MoodCategory.find(current_user.mood_category_id) %>
      <h2>Hoje queremos gerar seu quadro de tarefas diário baseado no seu humor. Em uma escala <%= mood_category.name %>, como você está hoje?</h2>
      <%= form_with url: create_daily_board_boards_path, method: :post, remote: true, html: { id: 'daily-board-form' } do |f| %>
      <div class="moods-container">
         <% theme_moods = ThemeMood.where(mood_category_id: mood_category.id).limit(5) %>
         <% theme_moods.each do |theme_mood| %>
         <% user_mood = current_user.user_moods.find_by(mood_id: theme_mood.mood_id) %>       
         <div class="mood-item <%= 'selected' if user_mood&.active %>" data-mood-id="<%= theme_mood.mood_id %>">
            <img src="<%=theme_mood.image_url%>" alt="<%= theme_mood.mood.name %>" class="mood-image">
            <p class="mood-name"><%= theme_mood.mood.name %></p>
         </div>
         <% end %>
      </div>
      <%= hidden_field_tag :selected_mood_id, '', id: 'selected_mood_id' %>
      <!-- Botão para Gerar o Board Diário -->
      <div class="generate-board-container">
         <button class="generate-board-button" id="generate-board-button">
         <i class="bi bi-chevron-double-down"></i>
         </button>
         <div class="generate-board-legend">Clique aqui para salvar seu humor diário</div>
      </div>
      <% end %>
   </div>
   <div style="height: 20px" id="mood-message-above-section"></div>
   <div class="mood-message-section" style="position: relative; background-color: black; <%= 'display: none;' if @has_mood_today %>" id="mood-message-section">
      <!-- Atualiza o título com base no humor atual -->
      <h3 id="selected-mood-text">Sua Análise de Humor: <%= @active_mood.present? ? @active_mood.mood.name : "Nenhum humor selecionado ainda" %></h3>
      <div style="display: flex; align-items: flex-start; justify-content: center;">
         <!-- Primeira coluna: Análise de Humor e Imagem -->
         <div style="display: flex; flex-direction: column; align-items: flex-start;">
            <!-- Atualiza a imagem com base no humor atual -->
            <div style="position: relative; width: 250px; height: 250px; overflow: hidden; border-radius: 20px;">
               <img id="mood-image" src="<%= @active_mood.image_url || 'https://via.placeholder.com/250' %>" alt="Imagem de Humor" style="width: 100%; height: 100%; object-fit: cover; border-radius: 20px;">
            </div>
         </div>
         <!-- Linha vertical branca separando -->
         <div style="width: 2px; height: 250px; background-color: white; margin: 0 20px;"></div>
         <!-- Segunda coluna: Texto explicando o humor -->
         <div style="display: flex; flex-direction: column; justify-content: center;">
            <!-- Atualiza a mensagem com base no humor atual -->
            <p id="mood-message" style="font-size: 18px; color: #333;">
               <%= @active_mood.message || "Texto falando algo sobre o humor atual. Aqui você pode descrever o que o humor selecionado significa ou fornecer detalhes adicionais." %>
            </p>
         </div>
      </div>
      <% end %>
   </div>
   <!-- Seção do Gráfico de Cards (Board Diário) -->
      <% if current_user.cards.exists? %>

   <h2 style="margin-left: 20px;padding-top: 20px; padding-bottom: 20px;">Atividade de Cards - Intervalo 30 dias</h2>
   <div class="cards-graph-content" id="cards-graph-content">
      <div class="cards-graph-section mb-5">
         <div class="graph-dates">
            <span class="start-date"><%= @first_card_date.strftime('%d/%m/%Y') %> </span>
            <span class="end-date"><%= @last_card_date.strftime('%d/%m/%Y') %></span>
         </div>
         <div class="cards-graph">
            <% @cards_by_date.each do |day| %>
            <div class="graph-day" title="<%= day[:date].strftime('%d/%m/%Y') %>">
               <% day[:cards].each do |card| %>
               <% if card.present? %>
               <div 
                  class="graph-square priority-<%= card.priority || 0 %> <%= 'completed' if card.completed %>" 
                  title="<%= card.title %>" 
                  data-board-id="<%= card.board_item.board_id %>"
                  data-card-id="<%= card.id %>"
                  ></div>
               <% else %>
               <div class="graph-square empty"></div>
               <% end %>
               <% end %>
            </div>
            <% end %>
         </div>
         <!-- Legenda de Prioridades -->
         <div class="priority-legend mt-4">
            <div class="legend-items">
               <span>Menor Prioridade</span>
               <div class="legend-item">
                  <div class="graph-square priority-0 completed" title="Não informada"></div>
               </div>
               <div class="legend-item">
                  <div class="graph-square priority-1 completed" title="Baixa"></div>
               </div>
               <div class="legend-item">
                  <div class="graph-square priority-2 completed" title="Média"></div>
               </div>
               <div class="legend-item">
                  <div class="graph-square priority-3 completed" title="Alta"></div>
               </div>
               <span>Maior Prioridade</span>
            </div>
         </div>
      </div>
   </div>

         <% end %>

   <!-- Seção de Boards Existentes -->
   <h2 style="margin-left: 20px;">Boards</h2>
   <div class="board-container">
      <!-- Card para Adicionar Novo Board -->
      <div class="board-card new-board-card" id="add-board-button">
         <div class="card-body">
            <i class="bi bi-plus-lg" aria-label="Adicionar Novo Board"></i>
         </div>
      </div>
      <!-- Formulário oculto para adicionar um novo board -->
      <div class="new-board-form" style="display: none;">
         <%= form_with(model: Board.new, url: boards_path, html: { class: 'create-board-form' }) do |form| %>
         <div class="field mb-3">
            <%= form.text_field :title, placeholder: "Nome do novo board", class: 'form-control board-title-input', required: true %>
         </div>
         <% end %>
      </div>
      <!-- Cards dos Boards Existentes -->
      <% @boards.each do |board| %>
      <div class="board-card">
         <%= link_to board_path(board), class: 'board-link' do %>
         <div class="card-body">
            <h5 class="card-title"><%= board.title %></h5>
         </div>
         <% end %>
      </div>
      <% end %>
   </div>
   <!-- Seção do Board Diário -->
   <% if current_user.show_daily_board && current_user.cards.exists?%>
   <h2 style="margin-left: 20px;">Board diário - <%= Date.today.strftime('%d/%m') %></h2>
   <!-- Mensagem Informativa com Link para Editar Humor -->
   <div class="edit-mood-message alert alert-info d-flex align-items-center" role="alert" style="margin-bottom: 20px;">
      <span>
      O board diário foi criado a partir do seu humor diário. Você pode <a href="#" id="edit-mood-button" class="alert-link">alterar seu humor diário e gerar um novo board</a>.
      </span>
   </div>
   <div class="board-container">
      <!-- Card do Board Diário Existente -->
      <div class="board-card">
         <%= link_to board_path(@daily_board), class: 'board-link' do %>
         <div class="card-body">
            <h5 class="card-title"><%= @daily_board.title %></h5>
         </div>
         <% end %>
      </div>
   </div>
   <% end %>
   <% if current_user.show_recent_boards && current_user.boards.where(active: true).exists? %>
   <h2 style="margin-left: 20px;">Últimos acessados</h2>
   <div class="board-container">
      <!-- Cards dos Boards Existentes -->
      <% @last_accessed_boards.each do |board| %>
      <div class="board-card">
         <%= link_to board_path(board), class: 'board-link' do %>
         <div class="card-body">
            <h5 class="card-title"><%= board.title %></h5>
         </div>
         <% end %>
      </div>
      <% end %>
   </div>
   <% end %>
   <% if current_user.show_popular_boards && current_user.boards.where(active: true).exists? %>
   <h2 style="margin-left: 20px;">Mais acessados</h2>
   <div class="board-container">
      <!-- Cards dos Boards Existentes -->
      <% current_user.boards.where(active: true).order(access_count: :desc).each do |board| %>
      <div class="board-card">
         <%= link_to board_path(board['id']), class: 'board-link' do %>
         <div class="card-body">
            <h5 class="card-title"><%= board['title'] %></h5>
         </div>
         <% end %>
      </div>
      <% end %>
   </div>
   <% end %>
</div>
<!-- Scripts JavaScript -->
<script>
 $.ajaxSetup({
    headers: {
      'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
    }
  });

  $(document).ready(function() {

    // Mostrar o formulário de novo board ao clicar no botão
$('#add-board-button').on('click', function(e) {
  e.preventDefault();
  var $this = $(this);
  var $form = $('.new-board-form');
  
  $this.hide();
  $form.show().insertAfter($this);
  $form.find('.board-title-input').focus();
});

// Fechar o formulário ao clicar fora
$(document).on('click', function(e) {
  var $target = $(e.target);
  if (!$target.closest('.new-board-form').length && !$target.closest('#add-board-button').length) {
    $('.new-board-form').hide();
    $('#add-board-button').show();
  }
});

// Submeter o formulário ao pressionar Enter
$(document).on('keypress', '.board-title-input', function(e) {
  if (e.which == 13) { // Código da tecla Enter
    e.preventDefault();
    var $form = $(this).closest('form');
    var boardTitle = $(this).val();

    // Enviar requisição AJAX para criar o board
    $.ajax({
      url: $form.attr('action'),
      method: 'POST',
      data: $form.serialize(),
      dataType: 'json',
      success: function(response) {
        if (response.success) {
          // Criar o novo card do board
          var newBoardCard = $(`
            <div class="board-card">
              <a href="/boards/${response.board.id}" class="board-link">
                <div class="card-body">
                  <h5 class="card-title">${response.board.title}</h5>
                </div>
              </a>
            </div>
          `).hide();
          
          // Inserir o novo board após o botão de adicionar
          $('#add-board-button').after(newBoardCard);
          newBoardCard.fadeIn(300);

          // Limpar e esconder o formulário
          $form.find('.board-title-input').val('');
          $form.closest('.new-board-form').hide();
          $('#add-board-button').show();
        } else {
          alert('Erro ao criar o board: ' + response.message);
        }
      },
      error: function() {
        alert('Erro ao criar o board. Por favor, tente novamente.');
      }
    });
  }
});

  });

document.addEventListener('DOMContentLoaded', function() {

   // Função para Redirecionar ao Clicar nos Quadrados do Gráfico
    const graphSquares = document.querySelectorAll('.graph-square');

    graphSquares.forEach(square => {
        square.addEventListener('click', function() {
            const boardId = this.getAttribute('data-board-id');
            const cardId = this.getAttribute('data-card-id');

            if (boardId) {
                // Redirecionar para o board correspondente
                window.location.href = `/boards/${boardId}`;
            }
        });
    });

    // Seleção de Humores
    const moodItems = document.querySelectorAll('.mood-item');
    const selectedMoodIdField = document.getElementById('selected_mood_id');
    let selectedMoodId = null;

    // Inicializar a seleção com o humor ativo, se existir
    moodItems.forEach(item => {
        const moodId = item.getAttribute('data-mood-id');
        if (item.classList.contains('selected')) {
            selectedMoodId = moodId;
        }
    });
    selectedMoodIdField.value = selectedMoodId || '';

    // Manipulação das caixas de humor para seleção única
    moodItems.forEach(item => {
        item.addEventListener('click', function() {
            const moodId = this.getAttribute('data-mood-id');

            if (this.classList.contains('selected')) {
                // Se o humor já está selecionado, desmarcar
                this.classList.remove('selected');
                selectedMoodId = null;
            } else {
                // Desmarcar todos os outros humores
                moodItems.forEach(i => i.classList.remove('selected'));
                // Marcar o humor clicado
                this.classList.add('selected');
                selectedMoodId = moodId;
            }

            selectedMoodIdField.value = selectedMoodId || '';
        });
    });

    // Manipulação do botão "Gerar Board"
    const generateBoardButton = document.getElementById('generate-board-button');

    generateBoardButton.addEventListener('click', function(event) {
        event.preventDefault(); // Evita a submissão do formulário imediatamente

        const messageSection = document.getElementById('mood-message-section');
        const messageAboveSection = document.getElementById('mood-message-above-section');
        const moodSelection = document.getElementById('mood-selection');
        const selectedMoodsText = document.getElementById('selected-mood-text');

        // Obter o nome do humor selecionado
        const selectedMoodItem = document.querySelector('.mood-item.selected');
        console.log(selectedMoodItem)
        const selectedMoodName = selectedMoodItem ? selectedMoodItem.querySelector('.mood-name').innerText : '';

        if (!selectedMoodId) {
            alert('Por favor, selecione pelo menos um humor antes de gerar o board.');
            return;
        }

        selectedMoodsText.innerText = "Sua Análise de Humor: " + selectedMoodName;
        // Atualizar a mensagem

        // Scroll para a seção de mensagem com comportamento suave
        messageAboveSection.scrollIntoView({ behavior: 'smooth' });

        // Atualizar os humores ativos via AJAX
        fetch('/update_user_moods', { // Atualize a rota conforme necessário
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ mood_id: selectedMoodId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
              console.log('Humor atualizado com sucesso');

              // Verifica se os dados de theme_mood foram retornados
              if (data.theme_mood) {
                  // Atualiza a imagem de humor
                  $('#mood-image').attr('src', data.theme_mood.image_url);

                  // Atualiza a mensagem de humor
                  $('#mood-message').text(data.theme_mood.message);
              }

              // Atualiza o texto da análise de humor
              selectedMoodsText.innerText = "Sua Análise de Humor: " + selectedMoodName;

              // Mostra a seção de mensagem de humor
              $('#mood-message-section').show();

          } else {
              alert('Erro ao atualizar humor: ' + data.error);
          }
      })
        .catch(error => {
            console.error('Erro:', error);
        });

    });

    // Manipulação do botão "Editar Humor"
    const editMoodButton = document.getElementById('edit-mood-button');

    editMoodButton.addEventListener('click', function() {
        const moodSelection = document.getElementById('mood-selection');
        const messageSection = document.getElementById('mood-message-section');
        
        // Mostrar a seleção de humores imediatamente
        moodSelection.style.display = 'flex';
        messageSection.style.display = 'block';
        
        // Adicionar um pequeno delay para garantir que a visibilidade foi aplicada antes de rolar para o topo
        setTimeout(() => {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }, 100); // Ajuste o tempo conforme necessário (100ms é geralmente suficiente)
    });
   
    // Manipulação da submissão do formulário (se ainda necessário)
    const form = document.getElementById('daily-board-form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();
        
        if (!selectedMoodId) {
            alert('Por favor, selecione pelo menos um humor.');
            return;
        }

        // Enviar via AJAX
        fetch(form.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ mood_id: selectedMoodId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log('Humor enviado com sucesso:', data);
                // Opcional: redirecionar ou atualizar a interface
            } else {
                alert('Erro ao enviar humor: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Erro:', error);
        });
    });
});
</script>
